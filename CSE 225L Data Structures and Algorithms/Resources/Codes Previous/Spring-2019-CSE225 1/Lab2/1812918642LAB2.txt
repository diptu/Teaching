Name : Md. Mahfuzur Rahman Shakil
ID : 1812918642
Section : 1

Task 1/2/4........

-----> DynArr.h
------------------------------------


#ifndef LAB2_DYNARR_H
#define LAB2_DYNARR_H

template <class T>
class DynArr
{
private:
    T *data;
    int  size;
public:
    DynArr();
    DynArr(int);
    ~DynArr();
    void setValue(int ,T);
    T getValue(int);
    void allocate(int);
};
#endif //LAB2_DYNARR_H


----->DynArr.cpp
--------------------------------------



#include "DynArr.h"
#include<iostream>
using namespace std;

template <class T>
DynArr<T>::DynArr()
{
    data = NULL ;
    size = 0;
}


template <class T>
DynArr<T>::DynArr(int s)
{
    data = new T [s];
    size = s;
}


template <class T>
void DynArr<T>::allocate(int s)
{
    if(data != NULL)
    {
        int n= sizeof(data);
        int  *newArr = new int[s];
        std::copy(data, data + std::min(n, s), newArr);
        delete[] data;
        data = newArr;
    }
    else
    {
        data = new T [s];
        size = s;
    }
}


template <class T>
DynArr<T>::~DynArr()
{
    delete []data;
}


template <class T>
T DynArr<T>::getValue(int index)
{
    return data[index];
}


template <class T>
void DynArr<T>::setValue(int index,T value)
{
    data[index] = value ;
}


----->Main.cpp
---------------------------



#include <iostream>
#include "DynArr.cpp"
using namespace std;
int main()
{
    DynArr <int> emptyOB ;
    DynArr <int> ob(5);
    int value;
    for(int i=0; i<5 ;i++)
    {
        cout<<"Enter array value: "<<endl;
        cin>>value;
        ob.setValue(i,value);
    }
    cout<<"Array element: "<<endl;
    for(int i=0;i<5;i++)
    {
        cout<<ob.getValue(i)<<endl;
    }
    
}







TASK 3.....
-------------------------


------->DynArr.h
---------------------------------


#ifndef LAB2TASK3_DYNARR_H
#define LAB2TASK3_DYNARR_H

class DynArr
{
private:
     int **data;
     int row,col;
public:
     DynArr();
     DynArr(int,int);
     ~DynArr();
     void setValue(int,int,int);
     int getValue(int,int);

};

#endif //LAB2TASK3_DYNARR_H





---------->dynArr.cpp
------------------------------------




#include "DynArr.h"
#include <iostream>
using namespace std;
DynArr::DynArr()
{
    data = NULL;
    row = 0;
    col = 0;
}

DynArr::DynArr(int r, int c)
{
    data = new int*[r] ;

    for (int i = 0; i < r; i++)
    {
        data[i] = new int[c];

    }
}

DynArr::~DynArr()
{
    for (int i = 0; i < row; ++i)
    {
        delete []data[i];
        delete []data;
        data = NULL ;
    }
}

void DynArr::setValue(int row, int col, int value)
{
    data [row][col] = value ;
}

int DynArr::getValue(int rows,int col)
{
    return data[rows][col] ;
}





---------->Main.cpp
------------------------------------

#include <iostream>
#include "DynArr.h"
using namespace std;

int main()
{
    int row,col;
    cout<<"Enter Row & col number : "<<endl;
    cin>>row>>col;

   DynArr *ob = new DynArr(row,col);


    int value ;
    for (int i = 0; i < row; i++)
    {
        for (int j = 0; j < col; j++)
        {
            cout<<"Enter array element: ";
            cin>>value;
            ob->setValue(i,j,value) ;
        }
    }
    for (int i = 0; i < row; i++)
    {
        for (int j = 0; j < col; j++)
        {
            cout<<ob->getValue(i,j)<<" ";
        }
        cout<<endl;
    }



return 0;
}
